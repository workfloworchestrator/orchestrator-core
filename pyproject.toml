[build-system]
requires = ["flit"]
build-backend = "flit.buildapi"

[tool.flit.metadata]
module = "orchestrator"
dist-name = "orchestrator-core"
author = "SURF"
author-email = "automation-beheer@surf.nl"
home-page = "https://github.com/workfloworchestrator/orchestrator-core"
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "Intended Audience :: Telecommunications Industry",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.10",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP",
]
requires = [
    "alembic==1.5.4",
    "broadcaster[redis]==0.2.0",
    "click==8.0.3",
    "deepmerge==0.1.0",
    "fastapi~=0.91.0",
    "fastapi-etag==0.4.0",
    "more-itertools~=9.0.0",
    "itsdangerous==2.1.2",
    "Jinja2==3.1.2",
    "opentelemetry-api==1.9.1",
    "opentelemetry-exporter-jaeger==1.9.1",
    "opentelemetry-instrumentation-httpx==0.28b1",
    "opentelemetry-instrumentation-fastapi==0.28b1",
    "opentelemetry-instrumentation-psycopg2==0.28b1",
    "opentelemetry-instrumentation-redis==0.28b1",
    "opentelemetry-instrumentation-requests==0.28b1",
    "opentelemetry-instrumentation-sqlalchemy==0.28b1",
    "opentelemetry-instrumentation-wsgi==0.28b1",
    "opentelemetry-sdk==1.9.1",
    "orjson==3.8.0",
    "psycopg2-binary==2.9.5",
    "pydantic[email]==1.10.2",
    "python-dateutil==2.8.2",
    "python-rapidjson==1.9",
    "pytz==2022.7.1",
    "redis~=4.4.2",
    "schedule==1.1.0",
    "sentry-sdk[fastapi]==1.15.0",
    "SQLAlchemy==1.4.28",
    "SQLAlchemy-Searchable==1.4.1",
    "typer==0.7.0",
    "uvicorn[standard]~=0.20.0",
    "nwa-stdlib==1.4.4",
    "oauth2-lib==1.2.3",
    "markupsafe==2.0.1",
    "bandit==1.7.2",
    "tabulate==0.9.0"
]
description-file = "README.md"
requires-python = ">3.9,<3.12"

[tool.flit.metadata.urls]
Documentation = "https://workfloworchestrator.org/orchestrator-core/"

[tool.flit.metadata.requires-extra]
test = [
    "apache-license-check",
    "black",
    "blinker",
    "deepdiff",
    "flake8 < 5.0.0", # Due to https://github.com/tylerwince/flake8-bandit/issues/33
    "flake8-bandit",
    "flake8-bugbear",
    "flake8-comprehensions",
    "flake8-docstrings",
    "flake8-junit-report",
    "flake8-logging-format",
    "flake8-pep3101",
    "flake8-print",
    "flake8-rst",
    "flake8-rst-docstrings",
    "flake8-tidy-imports",
    "isort",
    "structlog",
    "jsonref",
    "mypy",
    "pytest",
    "pytest-cov",
    "pytest-httpx",
    "pytest-xdist",
    "requests-mock",
    "urllib3_mock",
    "types-Deprecated",
    "types-Jinja2",
    "types-aiofiles",
    "types-certifi",
    "types-click",
    "types-itsdangerous",
    "types-orjson",
    "types-pkg_resources",
    "types-python-dateutil",
    "types-pytz",
    "types-redis",
    "types-requests",
    "types-tabulate",
    "types-toml",
    "types-ujson",
]
doc = [
    "mkdocs",
    "mkdocs-material",
    "mkdocs-render-swagger-plugin",
    "mkdocs-include-markdown-plugin"
]
dev = [
    "toml",
    "bumpversion",
    "mypy_extensions",
    "pre-commit",
    "pydocstyle",
    "python-dotenv",
    "watchdog",
]


[tool.isort]
profile = "black"
line_length = 120
skip = ["src", "venv"]
known_third_party = ["pynso", "pydantic"]
known_first_party = ["migrations", "test"]

[tool.black]
line-length = 120
target-version = ["py310"]
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | venv
    | src
  )/
)
'''

[tool.nitpick]
style="github://workfloworchestrator/nitpick-style@main/nitpick-style-orchestrator-core.toml"
