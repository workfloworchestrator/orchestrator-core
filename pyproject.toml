[project]
name = "orchestrator-core"
dynamic = ["version", "description"]
readme = "README.md"
license = "Apache-2.0"
license-files = ["LICENSE"]
authors = [
    { name = "SURF", email = "automation-beheer@surf.nl" }
]
requires-python = ">=3.11,<3.14"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Telecommunications Industry",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
]
dependencies = [
    "alembic==1.16.1",
    "anyio>=3.7.0",
    "click==8.*",
    "deepmerge==2.0",
    "deprecated>=1.2.18",
    "fastapi~=0.115.2",
    "fastapi-etag==0.4.0",
    "itsdangerous>=2.2.0",
    "jinja2==3.1.6",
    "more-itertools~=10.7.0",
    "nwa-stdlib~=1.9.0",
    "oauth2-lib~=2.4.0",
    "orjson==3.10.18",
    "prometheus-client==0.22.1",
    "psycopg2-binary==2.9.10",
    "pydantic-forms>=1.4.0,<=2.1.0",
    "pydantic-settings~=2.9.1",
    "pydantic[email]~=2.8.2",
    "python-dateutil==2.8.2",
    "python-rapidjson>=1.18,<1.21",
    "pytz==2025.2",
    "redis==5.1.1",
    "schedule==1.1.0",
    "semver==3.0.4",
    "sentry-sdk[fastapi]~=2.29.1",
    "sqlalchemy==2.0.41",
    "sqlalchemy-utils==0.41.2",
    "strawberry-graphql>=0.246.2",
    "structlog>=25.4.0",
    "tabulate==0.9.0",
    "typer==0.15.4",
    "uvicorn[standard]~=0.34.0",
]

[project.urls]
Documentation = "https://workfloworchestrator.org/orchestrator-core"
Homepage = "https://workfloworchestrator.org/orchestrator-core"
Source = "https://github.com/workfloworchestrator/orchestrator-core"

# Published optional dependencies, or "extras"
[project.optional-dependencies]
celery = [
    "celery~=5.5.1",
]

# Local dependencies for development
[dependency-groups]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-embed-external-markdown>=3.0.2",
    "mkdocs-include-markdown-plugin>=7.1.6",
    "mkdocs-macros-plugin>=1.3.7",
    "mkdocs-material[imaging]>=9.6.14",
    "mkdocs-open-in-new-tab>=1.0.8",
    "mkdocs-render-swagger-plugin>=0.1.2",
    "mkdocstrings[python]>=0.29.1",
]
dev = [
    "apache-license-check>=1.0.0",
    "black>=25.1.0",
    "blinker>=1.9.0",
    "deepdiff>=8.5.0",
    "dirty-equals>=0.9.0",
    "jsonref>=1.1.0",
    "mypy==1.9",
    "mypy-extensions>=1.1.0",
    "pre-commit>=4.2.0",
    "pydocstyle>=6.3.0",
    "pyinstrument>=5.0.2",
    "pytest==8.4.1",
    "pytest-asyncio==0.21.2",
    "pytest-codspeed>=3.2.0",
    "pytest-cov>=6.2.1",
    "pytest-httpx>=0.29.0",
    "pytest-xdist>=3.7.0",
    "requests-mock>=1.12.1",
    "ruff>=0.12.0",
    "sqlalchemy[mypy]>=2.0.41",
    "toml>=0.10.2",
    "types-aiofiles>=24.1.0.20250606",
    "types-certifi>=2021.10.8.3",
    "types-click>=7.1.8",
    "types-deprecated>=1.2.15.20250304",
    "types-itsdangerous>=1.1.6",
    "types-jinja2>=2.11.9",
    "types-orjson>=3.6.2",
    "types-python-dateutil>=2.9.0.20250516",
    "types-pytz>=2025.2.0.20250516",
    "types-pyyaml>=6.0.12.20250516",
    "types-redis>=4.6.0.20241004",
    "types-requests>=2.32.4.20250611",
    "types-setuptools>=80.9.0.20250529",
    "types-tabulate>=0.9.0.20241207",
    "types-toml>=0.10.8.20240310",
    "types-ujson>=5.10.0.20250326",
    "urllib3-mock>=0.3.3",
    "watchdog>=6.0.0",
]

[build-system]
requires = ["flit_core>=3.2,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "orchestrator"

[tool.black]
line-length = 120
target-version = ["py310"]
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | venv
    | src
    | test/unit_tests/cli/data/generate
    | orchestrator/vendor
  )/
)
'''

[tool.nitpick]
style = [
"github://workfloworchestrator/nitpick-style@main/nitpick-style-orchestrator-core.toml",
"./nitpick-style.toml"
]

[tool.ruff]
exclude = [
    ".git",
    ".cache",
    ".eggs",
    "__pycache__",
    "dist",
    "src",
    "crypt.py",
    "venv",
    ".venv",
    "docs",
    "test/unit_tests/cli/data/generate",
    "orchestrator/vendor",
]
line-length = 120
target-version = "py39"

[tool.ruff.lint]
ignore = [
    "C417",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D202",
    "E501",
    "N806",
    "B905",
    "N805",
    "B904",
    "N803",
    "N801",
    "N815",
    "N802",
]
select = ["B", "C", "D", "E", "F", "I", "N", "RET", "S", "T", "W"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
"orchestrator/api/*" = ["B008"]
"orchestrator/cli/*" = ["B008"]
"orchestrator/devtools/scripts/*" = ["S101", "T201"]
"test/*" = ["S101", "B033", "N816", "N802", "T201"]
"orchestrator/__init__.py" = ["E402"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-third-party = ["pynso", "pydantic"]
known-first-party = [
    "migrations",
    "test",
    "nwastdlib",
    "oauth2_lib",
    "pydantic_forms",
]
