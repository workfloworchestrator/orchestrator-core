{# Product definition -#}

from enum import IntEnum, StrEnum

from orchestrator.domain.base import SubscriptionModel
from orchestrator.types import SubscriptionLifecycle

{% for pb in product_blocks -%}
from {{ product_blocks_module }}.{{ pb.variable }} import
    {{- " "}}{{ pb.type }}Block
    {{- ", "}}{{- pb.type }}BlockInactive
    {{- ", "}}{{- pb.type }}BlockProvisioning
{% endfor %}

{% include "enums.j2" %}
{% if non_standard_fixed_inputs -%}
from {{ product_types_module }}.fixed_input_types import {{ non_standard_fixed_inputs }}
{% endif -%}

class {{ product }}Inactive(SubscriptionModel, is_base=True):
    {% for fi in fixed_inputs -%}
    {{ fi.name }}: {{ fi.type }}
    {% endfor -%}
    {% for pb in product_blocks -%}
    {{ pb.name }}: {{ pb.type }}BlockInactive
    {% endfor %}

class {{ product }}Provisioning({{ product }}Inactive, lifecycle=[SubscriptionLifecycle.PROVISIONING]):
    {% for fi in fixed_inputs -%}
    {{ fi.name }}: {{ fi.type }}
    {% endfor -%}
    {% for pb in product_blocks -%}
    {{ pb.name }}: {{ pb.type }}BlockProvisioning
    {% endfor %}

class {{ product }}({{ product }}Provisioning, lifecycle=[SubscriptionLifecycle.ACTIVE]):
    {% for fi in fixed_inputs -%}
    {{ fi.name }}: {{ fi.type }}
    {% endfor -%}
    {% for pb in product_blocks -%}
    {{ pb.name }}: {{ pb.type }}Block
    {% endfor %}