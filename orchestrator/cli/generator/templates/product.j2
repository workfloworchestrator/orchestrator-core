{# Product definition -#}
{% include "copyright.j2" %}

{% if int_enums %}
from enum import IntEnum
{% endif %}
from orchestrator.domain.base import SubscriptionModel
from orchestrator.types import SubscriptionLifecycle
{%- if str_enums %}, strEnum{% endif %}

from {{ product_blocks_module }}.{{ product_block.variable }} import (
    {{ product_block.type }}Block,
    {{ product_block.type }}BlockInactive,
    {{ product_block.type }}BlockProvisioning,
)

{% if non_standard_fixed_inputs -%}
from {{ product_types_module }}.fixed_input_types import {{ non_standard_fixed_inputs }}
{% endif -%}

{% for fi in int_enums -%}
class {{ fi.type }}(IntEnum):
{%- for v in fi["values"] -%}
{% if v is number %}
    _{{ v }} = {{ v }}
{%- else %}
    {{ v.key | upper}} = {{ v.value }}
{%- endif -%}
{% endfor %}
{% endfor %}

{% for fi in str_enums -%}
class {{ fi.type }}(strEnum):
    {% for v in fi["values"] -%}
        {{ v }} = "{{ v }}"
    {% endfor %}
{% endfor -%}

class {{ product }}Inactive(SubscriptionModel, is_base=True):
    {% for fi in fixed_inputs -%}
    {{ fi.name }}: {{ fi.type }}
    {% endfor -%}
    {{ product_block.name }}: {{ product_block.type }}BlockInactive

class {{ product }}Provisioning({{ product }}Inactive, lifecycle=[SubscriptionLifecycle.PROVISIONING]):
    {% for fi in fixed_inputs -%}
    {{ fi.name }}: {{ fi.type }}
    {% endfor -%}
    {{ product_block.name }}: {{ product_block.type }}BlockProvisioning

class {{ product }}({{ product }}Provisioning, lifecycle=[SubscriptionLifecycle.ACTIVE]):
    {% for fi in fixed_inputs -%}
    {{ fi.name }}: {{ fi.type }}
    {% endfor -%}
    {{ product_block.name }}: {{ product_block.type }}Block
