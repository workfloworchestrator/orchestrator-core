name: CodSpeed

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  UV_LOCKED: true  # Assert that the `uv.lock` will remain unchanged

jobs:
  codspeed:
    name: Run benchmarks
    runs-on: ubuntu-latest
    container:
      image: ubuntu:latest
      options: --privileged
    services:
      postgres:
        image: postgres:15-alpine
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: nwa
          POSTGRES_USER: nwa
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install the project
        # --all-extras: [project.optional-dependencies]
        # --dev: group 'dev' from [dependency-groups]
        run: uv sync --all-extras --dev

      # Prevent error "repository path is not owned by the current user"
      - name: Fix git owner
        run: git config --global --add safe.directory "*"

      # Speculatively add the cargo binary directory to the PATH because codspeed's installer script somehow doesn't
      - name: Add $HOME/.cargo/bin to PATH
        run: echo "$HOME/.cargo/bin" >> "$GITHUB_PATH"

      - uses: CodSpeedHQ/action@v3
        with:
          run: CACHE_URI=redis://redis DATABASE_URI=postgresql://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST/$POSTGRES_DB uv run pytest test/unit_tests --codspeed
          token: ${{ secrets.CODSPEED_TOKEN }}
        env:
          POSTGRES_DB: orchestrator-core-test
          POSTGRES_USER: nwa
          POSTGRES_PASSWORD: nwa
          POSTGRES_HOST: postgres
          ENVIRONMENT: TESTING
