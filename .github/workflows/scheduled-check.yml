name: Scheduled build and test

on:
  schedule:  # Targets the default branch
    - cron: '0 6 * * MON'  # This is UTC, no TZ option yet unfortunately
  push:
    branches:
      - "1256-schedule-build-and-notify" # TODO remove

jobs:
  check_week:
    # Custom check as github does not support modulo syntax from gitlab ("0 7 * * MON%2")
    steps:
      - run: echo "WEEK_MODULO=$(expr `date +%W` % 2)" >> $GITHUB_ENV
      - name: Cancel workflow every other week
        uses: andymckay/cancel-action@0.2
        if: ${{ env.WEEK_MODULO == "1" }}

  run_build:
    uses: ./.github/workflows/run-linting-tests.yml
    needs: [check_week]

  # run_tests: # TODO ENABLE
  #   uses: ./.github/workflows/run-unit-tests.yml
  #   needs: [run_build]

  slack:
      needs: [run_build]
      # needs: [run_tests]
      runs-on: ubuntu-latest
      if: always()
      steps:
        - uses: technote-space/workflow-conclusion-action@v2
        - run: echo "ICON=$([ \"$WORKFLOW_CONCLUSION\" == \"success\" ] && echo white_check_mark || echo zap)" >> $GITHUB_ENV
        - run: echo "REPO=$(echo "$GITHUB_REPOSITORY" | cut -d '/' -f2-)" >> $GITHUB_ENV
        - run: echo "MSG=$([ \"$WORKFLOW_CONCLUSION\" == \"success\" ] && echo "Successful build" || echo "Build failed")" >> $GITHUB_ENV
        - run: echo "CI_JOB_URL=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_ENV
        - run: wget --quiet https://raw.githubusercontent.com/workfloworchestrator/nitpick-style/main/ci/scripts/slack.sh && chmod +x slack.sh
        - run: ./slack.sh "${{ secrets.CI_SLACK_NOTIFICATION_CHANNEL }}" "$MSG $REPO $CI_JOB_URL" $ICON "Github Pipeline"
          if: ${{ contains(fromJson('["failure", "timed_out", "success"]'), env.WORKFLOW_CONCLUSION) }}  # notify on success, failure, timeout
        # - uses: 8398a7/action-slack@v3
        #   with:
        #     status: ${{ env.WORKFLOW_CONCLUSION }} # neutral, success, skipped, cancelled, timed_out, action_required, failure
        #     channel: ${{ secrets.CI_SLACK_NOTIFICATION_CHANNEL }}
        #     icon_emoji: ${{ env.ICON }}
        #     username: "Github Pipeline"
        #     text: "${{ env.MSG }} ${{ env.REPO }} ${{ env.CI_JOB_URL }}"
        #   env:
        #     SLACK_WEBHOOK_URL: ${{ secrets.CI_SLACK_WEBHOOK_URL }}
        #   if: ${{ contains(fromJson('["failure", "success"]'), env.WORKFLOW_CONCLUSION) }}  # notify on success or failure

  # notify_build_failed:
  #   needs: [run_build]
  #   if: ${{ failure() }}
  #   uses: ./.github/workflows/slack-notify.yml
  #   with:
  #     message: "Build failed for"
  #     success: false
  #   secrets:
  #     CHANNEL: ${{ secrets.CI_SLACK_NOTIFICATION_CHANNEL }}
  #     CI_SLACK_WEBHOOK_URL: ${{ secrets.CI_SLACK_WEBHOOK_URL }}

  # notify_test_failed:
  #   needs: [run_tests]
  #   if: ${{ failure() }}
  #   uses: ./.github/workflows/slack-notify.yml
  #   with:
  #     message: "Successful build but failed test"
  #     success: false
  #   secrets:
  #     CHANNEL: ${{ secrets.CI_SLACK_NOTIFICATION_CHANNEL }}
  #     CI_SLACK_WEBHOOK_URL: ${{ secrets.CI_SLACK_WEBHOOK_URL }}

  # notify_test_success:
  #   needs: [run_tests]
  #   if: ${{ success() }}
  #   uses: ./.github/workflows/slack-notify.yml
  #   with:
  #     message: "Successfully built and tested"
  #     success: true
  #   secrets:
  #     CHANNEL: ${{ secrets.CI_SLACK_NOTIFICATION_CHANNEL }}
  #     CI_SLACK_WEBHOOK_URL: ${{ secrets.CI_SLACK_WEBHOOK_URL }}
